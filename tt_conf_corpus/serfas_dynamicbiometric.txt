Dynamic 
Biometric 
Recognition 
of 
Handwritten 
Digits 
Using 
Symbolic 
Aggregate 
Approximation 


Doug 
SerfassDepartment 
of 
Computer 
Science 
University 
of 
Arkansas 
at 
Little 
Rock 
Little 
Rock, 
Arkansas 
djserfass@ualr.edu 


ABSTRACT 


Symbolic 
aggregate 
approximation 
(SAX) 
is 
an 
ideal 
techniqu
e 
for 
dynamic 
biometric 
recognition 
of 
handwritten 
digits
. 
The 
manipulation 
of 
time 
series 
in 
SAX 
readily 
lends 
itself 
to 
analysis 
of 
the 
spatial 
coordinate 
data 
acquired 
from 
a 
digit 
written 
on 
the 
touchscreen 
of 
a 
smartphone 
or 
tablet. 
SAX 
generates 
a 
sequence 
of 
alphabetic 
characters 
derived 
from 
a 
time 
series 
as 
a 
result 
of 
this 
analysis. 
Alphabetic 
sequence
s 
may 
be 
compared 
using 
the 
SAX 
minimum 
distance 
function. 
We 
propose 
a 
new 
algorithm 
for 
author 
authenticatio
n 
based 
on 
this 
process 
and 
the 
simple 
use 
of 
mean 
and 
standard 
deviation. 
We 
analyze 
the 
accuracy 
of 
our 
solution 
using 
JMotif, 
a 
Java 
time 
series 
data 
mining 
toolkit 
based 
on 
SAX, 
and 
a 
handwritten 
digit 
database 
of 
1400 
samples 
from 
14 
authors. 
Our 
experimental 
validation 
proves 
that 
our 
algorithm 
will 
authenticate 
the 
author 
of 
any 
handwritte
n 
digit 
almost 
100% 
of 
the 
time. 
We 
conclude 
that 
our 
work 
has 
important 
implications 
in 
the 
design 
of 
handwritte
n 
Personal 
Identication 
Number 
systems. 


Categories 
and 
Subject 
Descriptors 


G.3. 
[Probability 
and 
Statistics]: 
Time 
series 
analysis; 
K.6.5. 
[Security 
and 
Protection]: 
Authentication; 
H.1.2. 
[User/Machine 
Systems]: 
Human 
information 
processing
; 
H.5.2. 
[User 
Interfaces]: 
Theory 
and 
methods 
Keywords 


Handwritten 
digits, 
Time 
series, 
JMotif, 
Personal 
identicatio
n 
number 


1. 
INTRODUCTION 
In 
Europe 
and 
Canada, 
a 
Personal 
Identication 
Numbe
r 
(PIN) 
is 
often 
used 
by 
retailers 
to 
authenticate 
a 
shoppe
r 
credit 
card. 
The 
Square 
Reader, 
from 
Square, 
Inc., 
is 
a 
small 
plastic 
device 
that 
plugs 
into 
the 
audio 
jack 
of 
a 
smartphone 
or 
tablet 
and 
reads 
the 
magnetic 
stripe 
of 
a 
credit 
card. 
Most 
smartphones 
and 
tablets 
incorporate 
a 


Permission to make digital or hard copies of all or part of this work for personal or 
classroom use is granted without fee provided that copies are not made or distributed 
for profit or commercial advantage and that copies bear this notice and the full citation
 on the first page. Copyrights for components of this work owned by others than 
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
 to post on servers or to redistribute to lists, requires prior specific permission 
and/or a fee. Request permissions from Permissions@acm.org. 
ACM 
SE 
â€™17, April 13-15, 2017, Kennesaw, GA, USA 

c 
2017 Association for Computing Machinery. 
ACM ISBN 978-1-4503-5024-2/17/04 ...$15.00 
http://dx.doi.org/10.1145/3077286.3077308 

touchscreen 
that 
enables 
a 
user 
to 
write 
on 
the 
device 
with 
a 
nger 
or 
stylus. 


The 
convergence 
of 
these 
devices 
and 
methods 
has 
created 
an 
opportunity 
to 
introduce 
additional 
security 
to 
retail 
paymen
t 
systems 
in 
the 
form 
of 
author 
authentication 
through 
dynamic 
biometric 
recognition 
of 
handwritten 
PIN 
digits. 
We 
assert 
that 
this 
technique, 
when 
combined 
with 
handwritte
n 
digit 
identication, 
will 
provide 
a 
simple 
and 
secure 
means 
for 
a 
user 
to 
complete 
a 
payment 
transaction. 


Our 
method 
requires 
that 
each 
author 
provide 
ten 
handwritte
n 
samples 
of 
each 
digit. 
These 
samples 
are 
obtained 
from 
the 
touchscreen 
of 
any 
smartphone 
or 
tablet 
and 
are 
stored 
in 
a 
database. 
The 
spatial 
coordinate 
data 
derived 
from 
these 
samples 
may 
be 
interpreted 
as 
a 
time 
series. 
This 
binary 
data 
(a 
black 
or 
white 
pixel) 
becomes 
time 
series 
value
s 
and 
increasing 
integers 
can 
be 
used 
as 
time 
series 
time 
stamps. 
Symbolic 
aggregate 
approximation 
(SAX) 
[1] 
may 
be 
used 
to 
manipulate 
this 
time 
series. 


We 
create 
a 
new 
algorithm 
for 
author 
authentication 
usin
g 
SAX 
and 
the 
simple 
use 
of 
mean 
and 
standard 
deviation. 
SAX 
generates 
a 
symbolic 
representation 
of 
a 
time 
series 
in 
the 
form 
of 
a 
sequence 
of 
alphabetic 
characters. 
SAX 
also 
denes 
distance 
measures 
between 
two 
sequences 
of 
alphabeti
c 
characters 
that 
lower 
bound 
corresponding 
distance 
measures 
dened 
on 
the 
original 
time 
series. 
As 
a 
result, 
we 
can 
explore 
a 
new 
algorithm 
that 
runs 
against 
the 
ecientl
y 
manipulated 
symbolic 
representation 
of 
a 
time 
series 
and 
produces 
identical 
results 
to 
algorithms 
that 
utilize 
the 
original 
data. 


2. 
RELATED 
WORK 
Schlapbach 
and 
Bunke 
[2] 
applied 
Hidden 
Markov 
Model 
based 
recognizers 
to 
handwriting 
for 
author 
authentication. 
For 
each 
author, 
they 
built 
an 
individual 
recognizer 
and 
trained 
it 
on 
text 
lines 
written 
by 
the 
author. 
During 
authentication
, 
a 
text 
line 
from 
an 
unknown 
author 
was 
presente
d 
to 
each 
of 
the 
recognizers. 
Each 
recognizer 
returned 
a 
transcription 
that 
included 
the 
log 
likelihood 
score 
for 
the 
considered 
input. 
The 
scores 
were 
sorted 
and 
the 
ranking 
was 
used 
for 
authentication. 
They 
demonstrated 
the 
accurac
y 
of 
their 
technique 
in 
an 
authentication 
experiment 
using 
over 
8,600 
text 
lines 
from 
120 
writers 
and 
achieved 
an 
Equal 
Error 
Rate 
of 
about 
2.5%. 


Manabe 
and 
Chakraborty 
[3] 
proposed 
a 
new 
algorithm 
for 
biometric 
authentication. 
The 
authors 
studied 
a 
similarit
y 
measure 
from 
the 
delay 
vector 
of 
reconstructed 
trajectorie
s 
of 
handwriting 
time 
series. 
They 
utilized 
the 
SVC 
2004 
online 
handwriting 
signature 
data 
to 
conduct 
simula



tion 
experiments. 
Their 
results 
showed 
that 
the 
proposed 
approach 
was 
quite 
eective 
for 
biometric 
authentication. 


Gazzah 
and 
Ben 
Amara 
[4] 
presented 
an 
approach 
for 
autho
r 
authentication 
using 
o-line 
Arabic 
handwriting. 
Their 
proposed 
method 
explored 
handwriting 
texture 
analysis 
by 
2D 
Discrete 
Wavelet 
Transforms 
using 
the 
DWT 
Lifting 
scheme. 
They 
utilized 
a 
comparative 
evaluation 
between 
textural 
features 
extracted 
by 
9 
dierent 
wavelet 
transform 
functions 
and 
a 
modular 
Multilayer 
Perceptron 
classier. 
Their 
experiments 
demonstrated 
author 
authentication 
accurac
y 
of 
95.68%. 


3. 
SYMBOLIC 
AGGREGATE 
APPROXIMATION 
SAX 
introduced 
a 
new 
symbolic 
representation 
of 
time 
series. 
This 
representation 
allows 
both 
dimensionality 
reductio
n 
and 
distance 
measures 
to 
be 
dened 
on 
the 
symbolic 
approach 
that 
lower 
bound 
corresponding 
distance 
measures 
dened 
on 
the 
original 
time 
series. 
We 
were 
unable 
to 
take 
advantage 
of 
dimensionality 
reduction 
as 
it 
reduced 
the 
accurac
y 
of 
our 
results. 
However, 
we 
include 
it 
in 
our 
discussio
n 
as 
it 
is 
an 
integral 
step 
in 
SAX. 


3.1 
Dimensionality 
Reduction 
SAX 
uses 
Piecewise 
Aggregate 
Approximation 
(PAA) 
to 
shrink 
a 
time 
series 
of 
arbitrary 
length 
n 
to 
a 
string 
of 
arbitrar
y 
length 
w 
(w<n, 
typically 
w 
<< 
n). 
In 
our 
research, 
w 
= 
n. 
PAA 
divides 
the 
data 
into 
w 
frames 
of 
equal 
size. 
The 
mean 
value 
of 
the 
data 
falling 
within 
a 
frame 
is 
calculate
d 
and 
a 
vector 
of 
these 
values 
becomes 
the 
data-reduced 
representation. 
Additionally, 
SAX 
normalizes 
each 
time 
serie
s 
to 
have 
a 
mean 
of 
zero 
and 
a 
standard 
deviation 
of 
one 
before 
converting 
it 
to 
the 
PAA 
representation. 


3.2 
Discretization 
The 
discretization 
technique 
used 
by 
SAX 
will 
produce 
symbols 
with 
equiprobability, 
as 
normalized 
time 
series 
have 
a 
Gaussian 
distribution. 
This 
fact 
allows 
determination 
of 
breakpoints 
that 
will 
produce 
a 
equal 
sized 
areas 
under 
a 
Gaussian 
curve. 
These 
breakpoints 
may 
be 
determined 
by 
looking 
them 
up 
in 
a 
statistical 
table. 
The 
JMotif 
[5] 
implementatio
n 
of 
SAX 
provides 
this 
table 
for 
numerous 
values 
of 
a. 
The 
breakpoints 
are 
used 
to 
map 
the 
PAA 
coecients 
into 
SAX 
symbols. 
The 
concatenation 
of 
symbols 
that 
represen
t 
a 
subsequence 
is 
known 
as 
a 
word. 


3.3 
Distance 
Measures 
The 
MINDIST 
function 
(implemented 
by 
JMotif) 
returns 
the 
minimum 
distance 
between 
the 
original 
time 
series 
of 
two 
words. 
This 
function 
is 
based 
on 
Euclidean 
distance, 
the 
most 
common 
distance 
measure 
for 
time 
series. 
MINDIST 
replaces 
the 
distance 
between 
two 
PAA 
coecients 
with 
the 
subfunction 
dist(). 
The 
dist() 
function 
is 
implemented 
using 
a 
table 
lookup, 
also 
provided 
by 
JMotif. 
For 
a 
given 
alphabe
t 
size 
a, 
the 
table 
is 
calculated 
and 
stored 
for 
fast 
lookup. 
MINDIST 
calculates 
the 
distance 
between 
two 
SAX 
representation
s 
of 
time 
series 
by: 
looking 
up 
the 
distances 
betwee
n 
each 
pair 
of 
symbols; 
squaring 
them; 
summing 
them; 
taking 
the 
square 
root 
and, 
nally, 
multiplying 
by 
the 
square 
root 
of 
the 
compression 
rate. 


4. 
ALGORITHM 
Our 
algorithm, 
which 
we 
call 
digitSAX, 
is 
shown 
in 
Figure 
1. 


1 
algorithm 
bool 
digitSAX(int 
digit, 
int 
digitXY[][]) 
2 
dene 
digitToAuthenticate 
: 
string; 
3 
digitToAuthenticate 
:= 
new 
Timeseries(digitXY).toString(); 
4 
dene 
authenticate 
: 
int; 
5 
dene 
smd 
: 
double; 
6 
for 
i 
:= 
digit*10 
to 
digit*10+9 
7 
smd 
:= 
saxMinimumDistance(digitToAuthenticate, 


saxString[i]); 
8 
if 
smd 
is 
within 
mean+-(standardDeviation*1.5) 
9 
authenticate++; 
10 
if 
authenticate 
>=8 
11 
return 
true; 
12 
else 
13 
return 
false; 


Figure 
1: 
The 
digitSAX 
algorithm. 


The 
parameters 
to 
digitSAX 
are 
a 
digit 
value, 
obtained 
from 
handwritten 
digit 
identication, 
and 
an 
array 
containin
g 
the 
x 
and 
y 
touchscreen 
coordinates 
obtained 
from 
a 
stylus 
(or 
nger) 
utilized 
by 
an 
author 
to 
create 
a 
handwritte
n 
digit. 
digitSAX 
returns 
true 
if 
the 
array 
authenticates 
to 
at 
least 
8 
out 
of 
10 
handwritten 
samples 
of 
the 
digit 
previousl
y 
created 
by 
the 
author. 
The 
selection 
of 
8 
and 
10 
is 
derived 
from 
our 
experimental 
validation 
and 
is 
discussed 
in 
that 
section. 


Line 
3 
converts 
the 
array 
to 
a 
time 
series 
and 
the 
time 
series 
to 
a 
string. 
Line 
6 
iterates 
over 
the 
10 
handwritte
n 
samples 
of 
the 
digit. 
Line 
7 
calculates 
the 
SAX 
minimu
m 
distance. 
Line 
8 
determines 
if 
this 
distance 
is 
within 
the 
mean 
plus 
or 
minus 
1.5 
standard 
deviations 
of 
all 
of 
the 
possible 
SAX 
minimum 
distance 
combinations 
of 
the 
10 
handwritten 
samples 
of 
the 
digit. 
If 
true, 
then 
authenticate 
is 
incremented. 
On 
line 
10, 
if 
authenticate 
is 
greater 
than 
or 
equal 
to 
8, 
then 
digitSAX 
returns 
true, 
else, 
digitSAX 
returns 
false. 


5. 
EXPERIMENTAL 
VALIDATION 
For 
experimental 
validation 
of 
our 
algorithm, 
we 
read 
the 
x 
and 
y 
tablet 
coordinates 
obtained 
from 
a 
stylus 
utilized 
by 
an 
author 
to 
create 
a 
handwritten 
digit. 
These 
coordinates 
are 
represented 
with 
a 
value 
of 
255 
in 
a 
two 
dimensional 
integer 
array. 
All 
other 
array 
elements 
are 
assigned 
a 
value 
of 
zero. 
The 
array 
values 
become 
our 
time 
series 
values 
and 
increasing 
integers 
become 
our 
time 
series 
time 
stamps. 
We 
create 
time 
series 
from 
these 
values 
and 
convert 
these 
time 
series 
into 
SAX 
representation 
strings 
and 
store 
these 
strings 
in 
a 
one 
dimensional 
array, 
indexed 
by 
author 
and 
digit. 


For 
each 
author 
and 
digit, 
we 
iterate 
over 
this 
one 
dimensiona
l 
array 
and 
calculate 
the 
SAX 
minimum 
distance 
between 
each 
given 
digit 
for 
a 
given 
author 
and 
calculate 
the 
mean 
and 
standard 
deviation 
of 
these 
values 
and 
store 
the 
results 
in 
two 
additional 
one 
dimensional 
arrays, 
one 
for 
mean 
and 
the 
other 
for 
standard 
deviation, 
also 
indexed 
by 
author 
and 
digit. 
We 
iterate 
over 
all 
three 
one 
dimensional 
arrays 
to 
simulate 
dynamic 
biometric 
recognition 
of 
both 
same 
and 
dierent 
author 
handwritten 
digits. 


Our 
data 
set 
[6] 
consisted 
of 
1400 
handwritten 
digits 
from 
14 
authors. 
Each 
author 
wrote 
each 
digit 
10 
times. 
Every 
handwritten 
digit 
was 
normalized 
to 
make 
it 
invariant 
to 
translations 
and 
scale 
distortions. 


To 
illustrate 
the 
challenge 
of 
author 
authentication 
using 



handwritten 
digits, 
we 
display 
three 
samples 
of 
the 
digit 
eight 
from 
our 
data 
set 
in 
Figure 
2 
and 
Figure 
4. 
The 
same 
author 
will 
usually 
not 
exactly 
duplicate 
a 
handwritten 
digit. 
For 
example, 
in 
Figure 
2, 
showing 
the 
digit 
eight 
from 
our 
data 
set 
written 
twice 
by 
the 
same 
author, 
note 
that 
the 
right 
digit 
is 
written 
at 
an 
angle 
and 
the 
top 
loop 
is 
not 
closed. 



Figure 
2: 
Digit 
eight 
written 
by 
same 
author. 


Our 
problem 
size 
for 
author 
authentication 
by 
the 
same 
author 
was 
n 
= 
1260. 
Figure 
3 
shows 
the 
percentage 
of 
comparisons 
that 
we 
correctly 
authenticated 
that 
a 
digit 
was 
written 
by 
the 
same 
author. 
This 
percentage 
was 
at 
least 
85% 
for 
each 
digit. 



Figure 
3: 
Author 
authentication 
by 
same 
author. 


Figure 
4 
shows 
the 
digit 
eight 
from 
our 
data 
set 
written 
once 
by 
dierent 
authors. 
Note 
the 
obvious 
variations 
of 
size, 
loop 
shape 
and 
loop 
closure. 
These 
dierences 
would 
seem 
to 
indicate 
a 
conclusion 
that 
authentication 
of 
any 
digit 
by 
a 
dierent 
author 
would 
be 
more 
accurate 
than 
by 
the 
same 
author. 
However, 
the 
opposite 
conclusion 
is 
the 
correct 
one. 


Our 
problem 
size 
for 
author 
authentication 
by 
a 
dierent 
author 
was 
n 
= 
18200. 
Figure 
5 
shows 
the 
percentage 
of 
comparisons 
that 
we 
correctly 
authenticated 
that 
a 
digit 
was 
written 
by 
a 
dierent 
author. 
The 
range 
for 
this 
percentage 
was 
57% 
to 
71%. 
Compare 
this 
range 
to 
the 
same 
author 
value 
of 
at 
least 
85% 
for 
each 
digit 
as 
shown 
in 
Figure 
3. 


digitSAX 
iterates 
10 
times 
on 
line 
6 
in 
Figure 
1 
as 
a 
result 
of 
our 
data 
set 
consisting 
of 
10 
handwritten 
samples 
by 
each 
author 
for 
each 
digit. 
For 
two 
reasons, 
our 
experimental 
results 
led 
us 
to 
select 
8 
as 
an 
authentication 
threshold 
on 
line 
10 
in 
Figure 
1. 


First, 
as 
indicated 
by 
the 
85% 
minimum 
in 
Figure 
3, 
by 
selecting 
8, 
we 
will 
correctly 
authenticate 
an 
author 
almost 



Figure 
4: 
Digit 
eight 
written 
by 
dierent 
authors. 



Figure 
5: 
Author 
authentication 
by 
dierent 
author. 


100% 
of 
the 
time 
when 
a 
digit 
is 
written 
by 
the 
same 
author, 
as 
the 
average 
value 
of 
authenticate 
in 
this 
scenario 
will 
be 
8.5. 


Second, 
as 
indicated 
by 
the 
57% 
minimum 
in 
Figure 
5, 
by 
selecting 
8, 
we 
will 
correctly 
authenticate 
that 
an 
autho
r 
did 
not 
write 
a 
digit 
almost 
100% 
of 
the 
time 
when 
a 
digit 
is 
written 
by 
a 
dierent 
author, 
as 
the 
average 
value 
of 
authenticate 
in 
this 
scenario 
will 
be 
4.3. 


6. 
JMOTIF 
We 
used 
JMotif, 
a 
Java 
time 
series 
data 
mining 
toolkit 
based 
on 
SAX, 
to 
implement 
our 
experimental 
validation. 
Figure 
6 
shows 
code 
snippets 
of 
the 
JMotif 
API 
in 
the 
pseudocode 
for 
our 
experimental 
validation. 


Line 
8 
assigns 
time 
series 
values 
from 
image 
values. 
Line 
9 
assigns 
time 
series 
time 
stamps 
from 
increasing 
integers. 
Line 
10 
uses 
the 
time 
series 
values 
and 
time 
series 
time 
stamps 
to 
instantiate 
a 
JMotif 
Timeseries 
object. 
Line 
11 
takes 
the 
Timeseries 
object 
and 
uses 
the 
JMotif 
SAXFactor
y 
class 
ts2string 
method 
to 
create 
a 
SAX 
representation 
string 
of 
the 
Timeseries 
object. 
Line 
19 
takes 
two 
SAX 
representatio
n 
strings 
and 
uses 
the 
JMotif 
SAXFactory 
class 
saxMinDist 
method 
to 
calculate 
the 
SAX 
minimum 
distance 
between 
the 
two 
strings. 


7. 
CONCLUSION 
Our 
new 
algorithm 
facilitates 
author 
authentication 
using 
handwritten 
digits. 
Similar 
research 
has 
been 
based 
mostly 
on 
handwriting 
in 
general. 
Consequently, 
our 
method 
is 
use



1 
i=0; 
2 
for 
all 
digits 
in 
data 
set 
3 
read 
x 
and 
y 
coordinates 
of 
digit; 
4 
for 
all 
x 
and 
y 
coordinates 
of 
digit 
5 
image[x][y]=255; 
6 
j=0; 
7 
for 
all 
cells 
in 
image 
8 
timeSeriesValues[] 
= 
image[][]; 
9 
timeSeriesTimestamps[] 
= 
j++; 
10 
timeSeries 
= 
new 
Timeseries(timeSeriesValues, 


timeSeriesTimestamps); 
11 
SAXRepresentation 
= 
SAXFactory.ts2string(timeSeries); 
12 
sr[i++] 
= 
SAXRepresentation; 
13 
for 
all 
authors 
14 
i=0; 
15 
for 
all 
digits 
16 
for 
all 
digit 
combinations 
17 
word1 
= 
sr[].toCharArray(); 
18 
word2 
= 
sr[].toCharArray(); 
19 
smd[i++] 
= 
SAXFactory.saxMinDist(word1,word2); 
20 
calculate 
and 
store 
mean(smd[]); 
21 
calculate 
and 
store 
standardDeviation(smd[]); 
22 
for 
all 
authors 
23 
for 
all 
digits 
24 
use 
mean+-(standardDeviation*1.5) 
to 
authenticate 


author 
and 
digit 


Figure 
6: 
JMotif 
API 
code 
snippets. 


ful 
for 
the 
focused 
task 
of 
dynamic 
biometric 
recognition 
of 
handwritten 
PIN 
digits. 
We 
have 
described 
how 
this 
techniqu
e 
could 
immediately 
enhance 
the 
security 
of 
credit 
card 
payment 
transactions. 
Another 
use 
might 
be 
handwritten 
PIN-based 
author 
authentication 
in 
order 
to 
enforce 
secure 
access 
to 
smartphones 
and 
tablets. 


New 
to 
the 
eld 
of 
author 
authentication 
is 
our 
use 
of 
SAX 
and 
treating 
a 
handwritten 
digit 
as 
a 
time 
series. 
SAX 
generates 
a 
symbolic 
representation 
of 
a 
time 
series 
in 
the 
form 
of 
a 
sequence 
of 
alphabetic 
characters. 
The 
primary 
benet 
of 
SAX 
is 
that 
it 
denes 
distance 
measures 
between 
two 
sequences 
of 
alphabetic 
characters 
that 
lower 
bound 
correspondin
g 
distance 
measures 
dened 
on 
the 
original 
time 
series. 
As 
a 
result, 
we 
were 
able 
to 
explore 
a 
new 
algorithm 
that 
runs 
against 
the 
eciently 
manipulated 
symbolic 
representatio
n 
of 
a 
time 
series 
and 
produces 
identical 
results 
to 
algorithms 
that 
utilize 
the 
original 
data. 


JMotif 
does 
most 
of 
the 
heavy 
lifting 
for 
our 
experimenta
l 
validation 
and 
oers 
proof 
that 
our 
algorithm 
provides 
accurate 
results. 
Specically, 
our 
experimental 
validation 
proves 
that 
our 
algorithm 
will 
authenticate 
the 
author 
of 
any 
handwritten 
digit 
almost 
100% 
of 
the 
time. 


8. 
ACKNOWLEDGMENT 
We 
thank 
Mengjun 
Xie 
for 
his 
advice 
and 
feedback 
on 
this 
work, 
Pavel 
Senin, 
the 
author 
of 
JMotif, 
and 
Alex 
Pankov, 
the 
author 
of 
mnist-tools, 
used 
to 
create 
the 
images 
in 
Figure 
2 
and 
Figure 
4. 


9. 
REFERENCES 
[1] 
Jessica 
Lin, 
Eamonn 
Keogh, 
Stefano 
Lonardi, 
and 
Bill 
Chiu. 
A 
symbolic 
representation 
of 
time 
series, 
with 
implications 
for 
streaming 
algorithms. 
In 
Proc. 
DMKD 
2003, 
pages 
2{11. 
ACM 
Press, 
2003. 
[2] 
Andreas 
Schlapbach 
and 
Horst 
Bunke. 
Using 
hmm 
based 
recognizers 
for 
writer 
identication 
and 
verication. 
In 
Proc. 
FHR 
2004, 
pages 
167{172. 
IEEE, 
2004. 
[3] 
Yusuke 
Manabe 
and 
Basabi 
Chakraborty. 
Identity 
detection 
from 
on-line 
handwriting 
time 
series. 
In 
Proc. 
SMCia 
2008, 
pages 
365{370. 
IEEE, 
2008. 
[4] 
Sami 
Gazzah 
and 
Najoua 
Ben 
Amara. 
Arabic 
handwriting 
texture 
analysis 
for 
writer 
identication 
using 
the 
dwt-lifting 
scheme. 
In 
Proc. 
ICDAR 
2007, 
pages 
1133{1137. 
IEEE, 
2007. 
[5] 
Home 
| 
SAX-VSM. 
http://jmotif.github.io/sax-vsm_site/. 
[6] 
UCI 
Machine 
Learning 
Repository: 
Pen-Based 
Recognition 
of 
Handwritten 
Digits 
Data 
Set. 
http://archive.ics.uci.edu/ml/datasets/PenBased+Recognition+of+Handwritten+Digits
. 



